import React from 'react';
import { render, screen } from '@testing-library/react';
import Formulario from '../components/Formulario';
import '@testing-library/jest-dom/extend-expect';
import userEvent from '@testing-library/user-event';

const crearCita = jest.fn();


test('<Formulario /> Cargar el formulario y revisar que todo sea correcto', () =>{
    // const wrapper = render( <Formulario /> );
    // wrapper.debug();

    render(
        <Formulario 
            crearCita={ crearCita }
        />
    );

    const titulo = screen.getByTestId('titulo');
    const btn_submit = screen.getByTestId('btn-submit');

    // Heading
    expect( titulo.tagName ).toBe('H2');
    expect( titulo.tagName ).not.toBe('H1');
    expect( titulo.textContent ).toBe('Crear Cita');

    //Boton Submit
    expect( btn_submit.tagName ).toBe('BUTTON');
    expect( btn_submit.textContent ).toBe('Agregar Cita');

});

test('<Formulario /> Validación de formulario', () => {

    render(
        <Formulario 
            crearCita={ crearCita }
        />
    );
    
    // Evento click
    const btnSubmit = screen.getByTestId('btn-submit');
    userEvent.click( btnSubmit );
    
    // getByTestId para elementos que si o si existen en el documento
    const alertError = screen.getByTestId('alerta');
    expect( alertError ).toBeInTheDocument();
    expect( alertError.textContent ).toBe('Todos los campos son obligatorios');

});

test('<Formulario /> Validación de formulario', () => {
    render(
        <Formulario 
            crearCita={ crearCita }
        />
    );

    userEvent.type(screen.getByTestId('mascota'), 'Hook');
    userEvent.type(screen.getByTestId('propietario'), 'Rene Montaño');
    userEvent.type(screen.getByTestId('fecha'), '2021-10-14');
    userEvent.type(screen.getByTestId('hora'), '10:30');
    userEvent.type(screen.getByTestId('sintomas'), 'Solo Duerme mucho');

    const btnSubmit = screen.getByTestId('btn-submit');
    userEvent.click( btnSubmit );

    // queryByTestId para elementos que puede o no que existen en el documento
    const alertError = screen.queryByTestId('alerta');
    expect( alertError ).not.toBeInTheDocument();

    //Comprobando que se creo una cita correctamente
    expect( crearCita ).toHaveBeenCalledTimes(1);

});